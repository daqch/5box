{"version":3,"sources":["components/Board.tsx","App.tsx","index.tsx"],"names":["Board","tiles","onClick","className","slice","map","curr","index","key","id","App","useState","setTiles","adj_matrix","useEffect","init","every","Number","length","alert","candidate","Array","from","Math","floor","random","current","e","preventDefault","target","getAttribute","console","log","items","item","valueOf","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAsCeA,EA/BgB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QACvC,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,OACZF,EAAMG,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAC5B,OACE,yBACEJ,UAAS,cAAyB,GAAhBF,EAAMM,GAAc,MAAQ,MAC9CC,IAAKD,EACLE,GAAE,UAAKF,GACPL,QAASA,QAKjB,yBAAKC,UAAU,OACZF,EAAMG,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAC5B,OACE,yBACEJ,UAAS,cAA6B,GAApBF,EAAMM,EAAQ,GAAU,MAAQ,MAClDE,GAAE,UAAKF,EAAQ,GACfC,IAAKD,EACLL,QAASA,U,MC+DRQ,MAxFf,WAAgB,IAAD,EACaC,mBAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,IADlD,mBACNV,EADM,KACCW,EADD,KAGPC,EAAa,CACjB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,GACJ,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,IAiCNC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WAENb,EAAMe,OAAM,SAACV,GACX,OAAOA,GAAQW,OAAO,OAER,GAAhBhB,EAAMiB,QAENC,MAAM,gBAIV,IAAMJ,EAAO,WACX,IAAMK,EAAYC,MAAMC,KAAK,CAAEJ,OAAQ,IAAK,kBAC1CK,KAAKC,MAAsB,EAAhBD,KAAKE,aAIhBL,EAAUJ,OAAM,SAACU,GACf,OAAmB,IAAZA,OAGTN,EAAUG,KAAKC,MAAsB,EAAhBD,KAAKE,WAAiB,GAG7Cb,EAASQ,IAOX,OACE,kBAAC,WAAD,KACE,yBAAKjB,UAAU,aACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CAAOF,MAAOA,EAAOC,QArEb,SAAUyB,GACxBA,EAAEC,iBAEF,IAAMrB,EAAQU,OAAQU,EAAEE,OAAmBC,aAAa,OAIxD,GAFAC,QAAQC,IAAIzB,GAEE,OAAVA,EAAgB,CAClBwB,QAAQC,IAAI,OAEZ,IAAIC,EAAK,YAAOhC,GAEZiC,EAAOjC,EAAMM,GAEjB2B,EAAO,EAAIA,EAAKC,UAEhBF,EAAM1B,GAAS2B,EAEf,IAAK,IAAIE,EAAI,EAAGA,EAAIvB,EAAWN,EAAM4B,WAAWjB,OAAQkB,IAAK,CAC3D,IAAIF,EAAOD,EAAMpB,EAAWN,EAAM4B,WAAWC,IAE7CF,EAAO,EAAIA,EAAKC,UAEhBF,EAAMpB,EAAWN,EAAM4B,WAAWC,IAAMF,EAG1CtB,EAASqB,OA4CL,4BAAQ/B,QAASa,GAAjB,eChFVsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e8f6a521.chunk.js","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\n\r\ninterface Props {\r\n  tiles: Array<Number>;\r\n  onClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\r\n}\r\n\r\nconst Board: React.FC<Props> = ({ tiles, onClick }: Props) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row\">\r\n        {tiles.slice(0, 2).map((curr, index) => {\r\n          return (\r\n            <div\r\n              className={`box ${tiles[index] == 0 ? \"off\" : \"on\"}`}\r\n              key={index}\r\n              id={`${index}`}\r\n              onClick={onClick}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"row\">\r\n        {tiles.slice(2, 6).map((curr, index) => {\r\n          return (\r\n            <div\r\n              className={`box ${tiles[index + 2] == 0 ? \"off\" : \"on\"}`}\r\n              id={`${index + 2}`}\r\n              key={index}\r\n              onClick={onClick}\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport Board from \"./components/Board\";\nimport \"./App.css\";\n\nfunction App() {\n  const [tiles, setTiles] = useState<Array<Number>>([0, 0, 0, 0, 0]);\n\n  const adj_matrix = [\n    [1, 2, 3],\n    [0, 3, 4],\n    [0, 3],\n    [0, 1, 2, 4],\n    [1, 3],\n  ];\n\n  const onClick = function (e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    const index = Number((e.target as Element).getAttribute(\"id\"));\n\n    console.log(index);\n\n    if (index !== null) {\n      console.log(\"###\");\n\n      let items = [...tiles];\n\n      let item = tiles[index];\n\n      item = 1 - item.valueOf();\n\n      items[index] = item;\n\n      for (let i = 0; i < adj_matrix[index.valueOf()].length; i++) {\n        let item = items[adj_matrix[index.valueOf()][i]];\n\n        item = 1 - item.valueOf();\n\n        items[adj_matrix[index.valueOf()][i]] = item;\n      }\n\n      setTiles(items);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (\n      tiles.every((curr) => {\n        return curr == Number(1);\n      }) &&\n      tiles.length != 0\n    ) {\n      alert(\"You won!!\");\n    }\n  });\n\n  const init = () => {\n    const candidate = Array.from({ length: 5 }, () =>\n      Math.floor(Math.random() * 2)\n    );\n\n    if (\n      candidate.every((current) => {\n        return current === 1;\n      })\n    ) {\n      candidate[Math.floor(Math.random() * 5)] = 0;\n    }\n\n    setTiles(candidate);\n  };\n\n  const check = () => {\n    console.log(tiles);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"board\">\n          <Board tiles={tiles} onClick={onClick} />\n          <button onClick={init}>Restart</button>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}